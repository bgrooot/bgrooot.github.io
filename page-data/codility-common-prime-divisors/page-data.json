{"componentChunkName":"component---src-templates-post-tsx","path":"/codility-common-prime-divisors/","result":{"data":{"markdownRemark":{"html":"<p><a href=\"https://app.codility.com/demo/results/training4D4R6R-VPA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RESULT</a></p>\n<p>이해가 잘 안가는 어려운 문제다.<br>\n참고했던 것 중에는 <a href=\"http://www.davidespataro.it/solution-to-the-codility-common-prime-divisors-set-problem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">요 설명</a>이 가장 낫다.\n요약하자면,</p>\n<ul>\n<li>소수의 약수 집합이 같으려면 두 집합이 서로에게 속해야한다.</li>\n<li>최대 공약수를 빼면서 포함되고 있는지를 포함한다</li>\n<li>수를 소인수분해된 형태로 이해하면 좀 편하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">hasPrimeDivisorsSet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">hasPrimeDivisorsSet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">B</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">hasPrimeDivisorsSet</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> gcd<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>gcd <span class=\"token operator\">=</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">A</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span> <span class=\"token operator\">/</span> gcd<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">A</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> \n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span> <span class=\"token operator\">%</span> <span class=\"token class-name\">B</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">B</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span> <span class=\"token operator\">%</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">A</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","excerpt":"RESULT…","tableOfContents":"","fields":{"slug":"/codility-common-prime-divisors/"},"frontmatter":{"title":"Codility - CommonPrimeDivisors","date":"2018년 10월 4일 목요일","tags":["codility"],"keywords":["Running Out Of Coins.","bgroot"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/codility-common-prime-divisors/","series":[],"lastmod":"0001-01-01"}},"staticQueryHashes":["3649515864","63159454"]}